diff --git a/controller-server/configs/0302.diff b/controller-server/configs/0302.diff
new file mode 100644
index 0000000..e69de29
diff --git a/controller-server/configs/csvToTs.py b/controller-server/configs/csvToTs.py
new file mode 100644
index 0000000..3dba280
--- /dev/null
+++ b/controller-server/configs/csvToTs.py
@@ -0,0 +1,35 @@
+import json
+import os
+
+def csv_to_ts_json(csv_file, ts_file):
+    dancers = {}
+    current_dancer = None
+
+    with open(csv_file, 'r', encoding='utf-8-sig') as f:
+        for line in f:
+            line = line.strip()
+            if not line:
+                continue
+            if ',' not in line:
+                current_dancer = line
+                dancers[current_dancer] = {"fps":30,"OFPARTS":{}, "LEDPARTS":{}, "LEDPARTS_MERGE":{}}
+            elif line.endswith(','):
+                current_dancer = line.split(',')[0].strip()
+                dancers[current_dancer] = {"fps":30,"OFPARTS":{}, "LEDPARTS":{}, "LEDPARTS_MERGE":{}}
+            else:
+                part_info = [x.strip() for x in line.split(',')]
+                if current_dancer and len(part_info) == 3:
+                    part_name, part_id, part_length = part_info
+                    dancers[current_dancer]["LEDPARTS"][part_name] = {
+                        "id": int(part_id),
+                        "len": int(part_length)
+                    }
+
+    with open(ts_file, 'w', encoding='utf-8',newline=os.linesep) as f:
+        f.write("import { ModelPinMapTable} from \"@/schema/PinMapTable\";\n")
+        f.write("const PropPinMapTable: ModelPinMapTable = ")
+        json.dump(dancers, f, ensure_ascii=False, indent=2)
+        f.write(";\n\nexport default PropPinMapTable;")
+
+csv_to_ts_json('props_channel_software.csv', 'propPinMapTable.ts')
+print("Convert complete")
\ No newline at end of file
diff --git a/controller-server/configs/modelPinMapTable.ts b/controller-server/configs/modelPinMapTable.ts
index 4a2d0ed..892df27 100644
--- a/controller-server/configs/modelPinMapTable.ts
+++ b/controller-server/configs/modelPinMapTable.ts
@@ -1,7 +1,8 @@
 import { ModelPinMapTable, ModelPinMapTableSchema } from "@/schema/PinMapTable";
+import PropPinMapTable from "./propPinMapTable";
 
 // The pinmap template for each model
-const modelPinMapTable: ModelPinMapTable = {
+const CharacterPinMapTable: ModelPinMapTable = {
   bad_men: {
     fps: 30,
     OFPARTS: {
@@ -180,6 +181,8 @@ const modelPinMapTable: ModelPinMapTable = {
   },
 };
 
+const modelPinMapTable = { ...CharacterPinMapTable, ...PropPinMapTable };
+
 ModelPinMapTableSchema.parse(modelPinMapTable);
 
 export default modelPinMapTable;
diff --git a/controller-server/configs/propPinMapTable.ts b/controller-server/configs/propPinMapTable.ts
new file mode 100644
index 0000000..a105d5b
--- /dev/null
+++ b/controller-server/configs/propPinMapTable.ts
@@ -0,0 +1,259 @@
+import { ModelPinMapTable } from "@/schema/PinMapTable";
+const PropPinMapTable: ModelPinMapTable = {
+  "9_Staff": {
+    fps: 30,
+    OFPARTS: {},
+    LEDPARTS: {
+      main_1: {
+        id: 1,
+        len: 82,
+      },
+      main_2: {
+        id: 2,
+        len: 82,
+      },
+      leaf_1: {
+        id: 3,
+        len: 34,
+      },
+      leaf_2: {
+        id: 4,
+        len: 34,
+      },
+      leaf_3: {
+        id: 5,
+        len: 34,
+      },
+      leaf_4: {
+        id: 6,
+        len: 34,
+      },
+    },
+    LEDPARTS_MERGE: {},
+  },
+  "26_Saber": {
+    fps: 30,
+    OFPARTS: {},
+    LEDPARTS: {
+      saber_main_left: {
+        id: 1,
+        len: 61,
+      },
+      saber_main_right: {
+        id: 2,
+        len: 60,
+      },
+      saber_side_left: {
+        id: 3,
+        len: 28,
+      },
+      saber_side_right: {
+        id: 4,
+        len: 29,
+      },
+    },
+    LEDPARTS_MERGE: {},
+  },
+  "13_Big_orb_left": {
+    fps: 30,
+    OFPARTS: {},
+    LEDPARTS: {
+      upper: {
+        id: 1,
+        len: 90,
+      },
+      lower: {
+        id: 2,
+        len: 91,
+      },
+      mid: {
+        id: 3,
+        len: 54,
+      },
+    },
+    LEDPARTS_MERGE: {},
+  },
+  "14_Big_Orb_right": {
+    fps: 30,
+    OFPARTS: {},
+    LEDPARTS: {
+      upper: {
+        id: 1,
+        len: 78,
+      },
+      lower: {
+        id: 2,
+        len: 80,
+      },
+      mid: {
+        id: 3,
+        len: 54,
+      },
+    },
+    LEDPARTS_MERGE: {},
+  },
+  "11_Small_Orb_1": {
+    fps: 30,
+    OFPARTS: {},
+    LEDPARTS: {
+      main: {
+        id: 1,
+        len: 126,
+      },
+    },
+    LEDPARTS_MERGE: {},
+  },
+  "12_Small_Orb_2": {
+    fps: 30,
+    OFPARTS: {},
+    LEDPARTS: {
+      main: {
+        id: 1,
+        len: 122,
+      },
+    },
+    LEDPARTS_MERGE: {},
+  },
+  "17_Pillar_1": {
+    fps: 30,
+    OFPARTS: {},
+    LEDPARTS: {
+      left_top: {
+        id: 1,
+        len: 48,
+      },
+      left_down: {
+        id: 2,
+        len: 48,
+      },
+      mid_top: {
+        id: 3,
+        len: 48,
+      },
+      mid_down: {
+        id: 4,
+        len: 48,
+      },
+      right_top: {
+        id: 5,
+        len: 48,
+      },
+      right_down: {
+        id: 6,
+        len: 48,
+      },
+      chain_left: {
+        id: 7,
+        len: 27,
+      },
+      chain_right: {
+        id: 8,
+        len: 27,
+      },
+    },
+    LEDPARTS_MERGE: {},
+  },
+  "18_Pillar_2": {
+    fps: 30,
+    OFPARTS: {},
+    LEDPARTS: {
+      left_top: {
+        id: 1,
+        len: 48,
+      },
+      left_down: {
+        id: 2,
+        len: 48,
+      },
+      mid_top: {
+        id: 3,
+        len: 49,
+      },
+      mid_down: {
+        id: 4,
+        len: 49,
+      },
+      right_top: {
+        id: 5,
+        len: 48,
+      },
+      right_down: {
+        id: 6,
+        len: 47,
+      },
+      chain_left: {
+        id: 7,
+        len: 27,
+      },
+      chain_right: {
+        id: 8,
+        len: 27,
+      },
+    },
+    LEDPARTS_MERGE: {},
+  },
+  "19_Pillar_3": {
+    fps: 30,
+    OFPARTS: {},
+    LEDPARTS: {
+      left_top: {
+        id: 1,
+        len: 48,
+      },
+      left_down: {
+        id: 2,
+        len: 47,
+      },
+      mid_top: {
+        id: 3,
+        len: 48,
+      },
+      mid_down: {
+        id: 4,
+        len: 48,
+      },
+      right_top: {
+        id: 5,
+        len: 48,
+      },
+      right_down: {
+        id: 6,
+        len: 48,
+      },
+    },
+    LEDPARTS_MERGE: {},
+  },
+  "20_Pillar_4": {
+    fps: 30,
+    OFPARTS: {},
+    LEDPARTS: {
+      left_top: {
+        id: 1,
+        len: 49,
+      },
+      left_down: {
+        id: 2,
+        len: 48,
+      },
+      mid_top: {
+        id: 3,
+        len: 48,
+      },
+      mid_down: {
+        id: 4,
+        len: 48,
+      },
+      right_top: {
+        id: 5,
+        len: 48,
+      },
+      right_down: {
+        id: 6,
+        len: 48,
+      },
+    },
+    LEDPARTS_MERGE: {},
+  },
+};
+
+export default PropPinMapTable;
diff --git a/controller-server/index.ts b/controller-server/index.ts
index 40d229e..e00fd2a 100644
--- a/controller-server/index.ts
+++ b/controller-server/index.ts
@@ -75,7 +75,7 @@ createNTPServer(parseInt(NTPSERVER_PORT));
 
 server.listen(SERVER_PORT, () => {
   console.log(
-    `[TCP Server] Controller Server is listening on port ${SERVER_PORT}\n`,
+    `[TCP Server] Controller Server is listening on port ${SERVER_PORT}\n`
   );
 });
 
diff --git a/controller-server/websocket/RPi/handlers.ts b/controller-server/websocket/RPi/handlers.ts
index ff2d2a8..a6c10bc 100644
--- a/controller-server/websocket/RPi/handlers.ts
+++ b/controller-server/websocket/RPi/handlers.ts
@@ -159,7 +159,7 @@ export async function handleRPiBoardInfo(ws: WebSocket, msg: FromRPiBoardInfo) {
 function setupTimeoutCheck(ws: WebSocket, MAC: string) {
   let timeout = setTimeout(() => {
     console.warn(
-      `[Timeout]: RPi ${dancerTable[MAC].dancer}/${dancerTable[MAC].interface} may have disconnected`,
+      `[Timeout]: RPi ${dancerTable[MAC].dancer}/${dancerTable[MAC].interface} may have disconnected`
     );
     dancerTable[MAC].connected = false;
     delete RPiWSs[MAC];
@@ -183,7 +183,7 @@ function setupTimeoutCheck(ws: WebSocket, MAC: string) {
 
 export function handleRPiCommandResponse(
   ws: WebSocket,
-  msg: FromRPiCommandResponse,
+  msg: FromRPiCommandResponse
 ) {
   const { MAC, command, message } = msg.payload;
   if (!validateMAC(MAC)) return;
